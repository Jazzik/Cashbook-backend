const TelegramBot = require("node-telegram-bot-api");
const fs = require("fs");
const path = require("path");
require("dotenv").config();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
const token = process.env.TELEGRAM_BOT_TOKEN;
const chatId = process.env.TELEGRAM_CHAT_ID;
const threadId = process.env.TELEGRAM_THREAD_ID; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π thread ID
const uploadsPath = path.join(__dirname, "../uploads");

if (!token || !chatId) {
  console.error(
    "–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TELEGRAM_BOT_TOKEN –∏ TELEGRAM_CHAT_ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
  );
  process.exit(1);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: false });

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏—Ö thread ID –≤ –∫–æ–Ω—Å–æ–ª—å
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
 */
function startMessageListener() {
  console.log("üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è thread ID...");
  console.log(
    "üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –µ–≥–æ thread ID"
  );
  console.log("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C");

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å polling
  const listenerBot = new TelegramBot(token, { polling: true });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  listenerBot.on("message", (msg) => {
    const messageInfo = {
      messageId: msg.message_id,
      chatId: msg.chat.id,
      threadId: msg.message_thread_id || "–ù–µ—Ç thread ID (–æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)",
      from: msg.from
        ? `${msg.from.first_name} ${msg.from.last_name || ""}`.trim()
        : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
      username: msg.from ? msg.from.username : "–ù–µ—Ç username",
      text: msg.text || "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞",
      date: new Date(msg.date * 1000).toLocaleString("ru-RU"),
      chatType: msg.chat.type,
    };

    console.log("\nüì® === –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï ===");
    console.log(`üÜî Message ID: ${messageInfo.messageId}`);
    console.log(`üí¨ Chat ID: ${messageInfo.chatId}`);
    console.log(`üßµ Thread ID: ${messageInfo.threadId}`);
    console.log(`üë§ –û—Ç: ${messageInfo.from} (@${messageInfo.username})`);
    console.log(`üìù –¢–µ–∫—Å—Ç: ${messageInfo.text}`);
    console.log(`üìÖ –î–∞—Ç–∞: ${messageInfo.date}`);
    console.log(`üè∑Ô∏è  –¢–∏–ø —á–∞—Ç–∞: ${messageInfo.chatType}`);
    console.log("========================\n");
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
  listenerBot.on("error", (error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –±–æ—Ç–∞:", error);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
  process.on("SIGINT", () => {
    console.log("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π...");
    listenerBot.stopPolling();
    process.exit(0);
  });

  return listenerBot;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ø–∞–ø–∫–∏ uploads
 * @returns {string|null} –ü—É—Ç—å –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –∏–ª–∏ null
 */
function getLatestImage() {
  try {
    if (!fs.existsSync(uploadsPath)) {
      console.log("–ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
      return null;
    }

    const files = fs.readdirSync(uploadsPath);

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageExtensions = [".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp"];
    const imageFiles = files.filter((file) => {
      const ext = path.extname(file).toLowerCase();
      return imageExtensions.includes(ext);
    });

    if (imageFiles.length === 0) {
      console.log("–í –ø–∞–ø–∫–µ uploads –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π");
      return null;
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏
    const filesWithStats = imageFiles.map((file) => {
      const filePath = path.join(uploadsPath, file);
      const stats = fs.statSync(filePath);
      return {
        name: file,
        path: filePath,
        mtime: stats.mtime,
      };
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª)
    filesWithStats.sort((a, b) => b.mtime - a.mtime);

    return filesWithStats[0].path;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error);
    return null;
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
 */
async function sendLatestImage() {
  try {
    const imagePath = getLatestImage();

    if (!imagePath) {
      console.log("–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏");
      return;
    }

    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${path.basename(imagePath)}`);

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const sendOptions = {
      caption: `üìä –û—Ç—á–µ—Ç –∑–∞ ${new Date().toLocaleDateString("ru-RU")}`,
    };

    // –ï—Å–ª–∏ –∑–∞–¥–∞–Ω thread ID, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –æ–ø—Ü–∏–∏
    if (threadId) {
      sendOptions.message_thread_id = parseInt(threadId);
      console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ thread ID: ${threadId}`);
    } else {
      console.log("–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç (–±–µ–∑ thread ID)");
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    await bot.sendPhoto(chatId, imagePath, sendOptions);

    console.log("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");

    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    fs.unlinkSync(imagePath);
    console.log(`–§–∞–π–ª ${path.basename(imagePath)} —É–¥–∞–ª–µ–Ω`);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error);

    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π, –Ω–µ —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
    if (
      error.code === "ETELEGRAM" ||
      error.message.includes("chat not found")
    ) {
      console.error("–û—à–∏–±–∫–∞ Telegram API. –§–∞–π–ª –Ω–µ —É–¥–∞–ª–µ–Ω.");
    }
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
 */
async function runBot() {
  console.log("ü§ñ –ó–∞–ø—É—Å–∫ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞...");
  console.log(`üìÅ –ü–∞–ø–∫–∞ uploads: ${uploadsPath}`);
  console.log(`üí¨ Chat ID: ${chatId}`);
  if (threadId) {
    console.log(`üßµ Thread ID: ${threadId}`);
  } else {
    console.log("üßµ Thread ID: –Ω–µ –∑–∞–¥–∞–Ω (–æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç)");
  }

  try {
    await sendLatestImage();
    console.log("‚úÖ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É");
  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runBot();
}

module.exports = {
  sendLatestImage,
  getLatestImage,
  runBot,
  startMessageListener,
};
